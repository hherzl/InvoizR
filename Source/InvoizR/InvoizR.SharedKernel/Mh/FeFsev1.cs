//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.3.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace InvoizR.SharedKernel.Mh.FeFse;

#pragma warning disable // Disable all warnings

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class FeFsev1 : Dte
{
    /// <summary>
    /// Identificación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("identificacion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public Identificacion Identificacion { get; set; } = new Identificacion();

    /// <summary>
    /// Emisor
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("emisor")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public Emisor Emisor { get; set; } = new Emisor();

    /// <summary>
    /// Receptor
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("sujetoExcluido")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public SujetoExcluido SujetoExcluido { get; set; } = new SujetoExcluido();

    /// <summary>
    /// Cuerpo del Documento
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("cuerpoDocumento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.MinLength(1)]
    [System.ComponentModel.DataAnnotations.MaxLength(2000)]
    public System.Collections.Generic.ICollection<CuerpoDocumento> CuerpoDocumento { get; set; } = new System.Collections.ObjectModel.Collection<CuerpoDocumento>();

    /// <summary>
    /// Resumen
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("resumen")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public Resumen Resumen { get; set; } = new Resumen();

    /// <summary>
    /// Apéndice
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("apendice")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.MinLength(1)]
    [System.ComponentModel.DataAnnotations.MaxLength(10)]
    public System.Collections.Generic.ICollection<Apendice> Apendice { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Identificacion : object
{
    /// <summary>
    /// Versión
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("version")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public int Version { get; set; }

    /// <summary>
    /// Ambiente de destino
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("ambiente")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    //[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
    //public IdentificacionAmbiente Ambiente { get; set; }
    public string  Ambiente { get; set; }

    /// <summary>
    /// Tipo de Documento
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoDte")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string TipoDte { get; set; }

    /// <summary>
    /// Número de Control
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("numeroControl")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(31, MinimumLength = 31)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^DTE-14-[A-Z0-9]{8}-[0-9]{15}$")]
    public string NumeroControl { get; set; }

    /// <summary>
    /// Código de Generación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codigoGeneracion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 36)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}$")]
    public string CodigoGeneracion { get; set; }

    /// <summary>
    /// Modelo de Facturación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoModelo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public double TipoModelo { get; set; }

    /// <summary>
    /// Tipo de Transmisión
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoOperacion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
    //public IdentificacionTipoOperacion TipoOperacion { get; set; }
    public int TipoOperacion { get; set; }

    /// <summary>
    /// Tipo de Contingencia
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoContingencia")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public IdentificacionTipoContingencia? TipoContingencia { get; set; }

    /// <summary>
    /// Motivo de Contingencia
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("motivoContin")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(500, MinimumLength = 1)]
    public string MotivoContin { get; set; }

    /// <summary>
    /// Fecha de Generación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("fecEmi")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
    public System.DateTimeOffset FecEmi { get; set; }

    /// <summary>
    /// Hora de Generación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("horEmi")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]?$")]
    public string HorEmi { get; set; }

    /// <summary>
    /// Tipo de Moneda
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoMoneda")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
    public IdentificacionTipoMoneda TipoMoneda { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Emisor
{
    /// <summary>
    /// NIT (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("nit")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^([0-9]{14}|[0-9]{9})$")]
    public string Nit { get; set; }

    /// <summary>
    /// NRC (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("nrc")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{1,8}$")]
    public string Nrc { get; set; }

    /// <summary>
    /// Nombre, denominación o razón social del contribuyente (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("nombre")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(250, MinimumLength = 1)]
    public string Nombre { get; set; }

    /// <summary>
    /// Código de Actividad Económica (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codActividad")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{2,6}$")]
    public string CodActividad { get; set; }

    /// <summary>
    /// Actividad Económica (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("descActividad")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(150, MinimumLength = 1)]
    public string DescActividad { get; set; }

    /// <summary>
    /// Dirección (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("direccion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public Direccion Direccion { get; set; } = new Direccion();

    /// <summary>
    /// Teléfono (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("telefono")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength = 8)]
    public string Telefono { get; set; }

    /// <summary>
    /// Código del establecimiento asignado por el MH
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codEstableMH")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
    public string CodEstableMH { get; set; }

    /// <summary>
    /// Código del establecimiento asignado por el contribuyente
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codEstable")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 1)]
    public string CodEstable { get; set; }

    /// <summary>
    /// Código del Punto de Venta (Emisor) Asignado por el MH
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codPuntoVentaMH")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
    public string CodPuntoVentaMH { get; set; }

    /// <summary>
    /// Código del Punto de Venta (Emisor) asignado por el contribuyente
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codPuntoVenta")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(15, MinimumLength = 1)]
    public string CodPuntoVenta { get; set; }

    /// <summary>
    /// Correo electrónico (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("correo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 3)]
    public string Correo { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class SujetoExcluido : object
{
    /// <summary>
    /// Tipo de documento de identificación (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoDocumento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
    public SujetoExcluidoTipoDocumento TipoDocumento { get; set; }

    /// <summary>
    /// Número de documento de Identificación (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("numDocumento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
    public string NumDocumento { get; set; }

    /// <summary>
    /// Nombre, denominación o razón social del contribuyente (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("nombre")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(250, MinimumLength = 1)]
    public string Nombre { get; set; }

    /// <summary>
    /// Código de Actividad Económica (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codActividad")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{2,6}$")]
    public string CodActividad { get; set; }

    /// <summary>
    /// Actividad Económica (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("descActividad")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(150, MinimumLength = 1)]
    public string DescActividad { get; set; }

    /// <summary>
    /// Dirección (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("direccion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    public Direccion2 Direccion { get; set; } = new Direccion2();

    /// <summary>
    /// Teléfono (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("telefono")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength = 8)]
    public string Telefono { get; set; }

    /// <summary>
    /// Correo electrónico (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("correo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(100)]
    public string Correo { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class CuerpoDocumento
{
    /// <summary>
    /// N° ítem
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("numItem")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(1, 2000)]
    public int NumItem { get; set; }

    /// <summary>
    /// Tipo de ítem
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("tipoItem")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public CuerpoDocumentoTipoItem TipoItem { get; set; }

    /// <summary>
    /// Cantidad
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("cantidad")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public double Cantidad { get; set; }

    /// <summary>
    /// Código
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codigo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
    public string Codigo { get; set; }

    /// <summary>
    /// Unidad de Medida
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("uniMedida")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    //public CuerpoDocumentoUniMedida UniMedida { get; set; }
    public int UniMedida { get; set; }

    /// <summary>
    /// Descripción
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("descripcion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(1000)]
    public string Descripcion { get; set; }

    /// <summary>
    /// Precio Unitario
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("precioUni")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double PrecioUni { get; set; }

    /// <summary>
    /// Descuento, Bonificación, Rebajas por ítem
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("montoDescu")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double MontoDescu { get; set; }

    /// <summary>
    /// Ventas
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("compra")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double Compra { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Resumen : object
{
    /// <summary>
    /// Total de Operaciones
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("totalCompra")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double TotalCompra { get; set; }

    /// <summary>
    /// Monto global de Descuento, Bonificación, Rebajas y otros al total de operaciones.
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("descu")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double Descu { get; set; }

    /// <summary>
    /// Total del monto de Descuento, Bonificación, Rebajas
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("totalDescu")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double? TotalDescu { get; set; }

    /// <summary>
    /// Sub-Total
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("subTotal")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double SubTotal { get; set; }

    /// <summary>
    /// IVA Retenido
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("ivaRete1")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double IvaRete1 { get; set; }

    /// <summary>
    /// Retención Renta
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("reteRenta")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double ReteRenta { get; set; }

    /// <summary>
    /// Total a Pagar
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("totalPagar")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double TotalPagar { get; set; }

    /// <summary>
    /// Total en Letras
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("totalLetras")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(200)]
    public string TotalLetras { get; set; }

    /// <summary>
    /// Condición de la Operación
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("condicionOperacion")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public double CondicionOperacion { get; set; }

    /// <summary>
    /// Pagos
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("pagos")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.MinLength(1)]
    public System.Collections.Generic.ICollection<Pagos> Pagos { get; set; }

    /// <summary>
    /// Observaciones
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("observaciones")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(3000)]
    public string Observaciones { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Apendice
{
    /// <summary>
    /// Nombre del campo
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("campo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(25)]
    public string Campo { get; set; }

    /// <summary>
    /// Descripción
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("etiqueta")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(50)]
    public string Etiqueta { get; set; }

    /// <summary>
    /// Valor/Dato
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("valor")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(150)]
    public string Valor { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum IdentificacionAmbiente
{

    [System.Runtime.Serialization.EnumMember(Value = @"00")]
    _00 = 0,


    [System.Runtime.Serialization.EnumMember(Value = @"01")]
    _01 = 1,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum IdentificacionTipoOperacion
{

    _1 = 1,


    _2 = 2,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum IdentificacionTipoContingencia
{

    [System.Runtime.Serialization.EnumMember(Value = @"1")]
    _1 = 1,


    [System.Runtime.Serialization.EnumMember(Value = @"2")]
    _2 = 2,


    [System.Runtime.Serialization.EnumMember(Value = @"3")]
    _3 = 3,


    [System.Runtime.Serialization.EnumMember(Value = @"4")]
    _4 = 4,


    [System.Runtime.Serialization.EnumMember(Value = @"5")]
    _5 = 5,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum IdentificacionTipoMoneda
{

    [System.Runtime.Serialization.EnumMember(Value = @"USD")]
    USD = 0,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Direccion : object
{
    /// <summary>
    /// Dirección Departamento (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("departamento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^0[1-9]|1[0-4]$")]
    public string Departamento { get; set; }

    /// <summary>
    /// Dirección Municipio (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("municipio")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{2}$")]
    public string Municipio { get; set; }

    /// <summary>
    /// Dirección complemento (Emisor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("complemento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength = 1)]
    public string Complemento { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum SujetoExcluidoTipoDocumento
{

    [System.Runtime.Serialization.EnumMember(Value = @"36")]
    _36 = 0,


    [System.Runtime.Serialization.EnumMember(Value = @"13")]
    _13 = 1,


    [System.Runtime.Serialization.EnumMember(Value = @"02")]
    _02 = 2,


    [System.Runtime.Serialization.EnumMember(Value = @"03")]
    _03 = 3,


    [System.Runtime.Serialization.EnumMember(Value = @"37")]
    _37 = 4,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Direccion2 : object
{
    /// <summary>
    /// Dirección: Departamento (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("departamento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^0[1-9]|1[0-4]$")]
    public string Departamento { get; set; }

    /// <summary>
    /// Dirección: Municipio (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("municipio")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{2}$")]
    public string Municipio { get; set; }

    /// <summary>
    /// Dirección: complemento (Receptor)
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("complemento")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required]
    [System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength = 1)]
    public string Complemento { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum CuerpoDocumentoTipoItem
{

    _1 = 1,


    _2 = 2,


    _3 = 3,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum CuerpoDocumentoUniMedida
{

    _1 = 1,


    _2 = 2,


    _3 = 3,


    _4 = 4,


    _5 = 5,


    _6 = 6,


    _8 = 8,


    _9 = 9,


    _10 = 10,


    _11 = 11,


    _12 = 12,


    _13 = 13,


    _14 = 14,


    _15 = 15,


    _16 = 16,


    _17 = 17,


    _18 = 18,


    _19 = 19,


    _20 = 20,


    _21 = 21,


    _22 = 22,


    _23 = 23,


    _24 = 24,


    _25 = 25,


    _26 = 26,


    _27 = 27,


    _29 = 29,


    _30 = 30,


    _31 = 31,


    _32 = 32,


    _33 = 33,


    _34 = 34,


    _35 = 35,


    _36 = 36,


    _37 = 37,


    _38 = 38,


    _39 = 39,


    _40 = 40,


    _42 = 42,


    _43 = 43,


    _44 = 44,


    _45 = 45,


    _46 = 46,


    _47 = 47,


    _49 = 49,


    _50 = 50,


    _51 = 51,


    _52 = 52,


    _53 = 53,


    _54 = 54,


    _55 = 55,


    _56 = 56,


    _57 = 57,


    _58 = 58,


    _59 = 59,


    _99 = 99,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public partial class Pagos
{
    /// <summary>
    /// Código de forma de pago
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("codigo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(2)]
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^(0[1-9]||1[0-4]||99)$")]
    public string Codigo { get; set; }

    /// <summary>
    /// Monto por forma de pago
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("montoPago")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
    public double MontoPago { get; set; }

    /// <summary>
    /// Referencia de modalidad de pago
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("referencia")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.StringLength(50)]
    public string Referencia { get; set; }

    /// <summary>
    /// Plazo
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("plazo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    [System.ComponentModel.DataAnnotations.RegularExpression(@"^0[1-3]$")]
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
    public PagosPlazo? Plazo { get; set; }

    /// <summary>
    /// Período de plazo
    /// </summary>

    [System.Text.Json.Serialization.JsonPropertyName("periodo")]

    [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
    public double? Periodo { get; set; }


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
public enum PagosPlazo
{

    [System.Runtime.Serialization.EnumMember(Value = @"01")]
    _01 = 1,


    [System.Runtime.Serialization.EnumMember(Value = @"02")]
    _02 = 2,


    [System.Runtime.Serialization.EnumMember(Value = @"03")]
    _03 = 3,


}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v13.0.3.0)")]
internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>
{
    public override System.DateTimeOffset Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
    {
        var dateTime = reader.GetString();
        if (dateTime == null)
        {
            throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
        }

        return System.DateTimeOffset.Parse(dateTime);
    }

    public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTimeOffset value, System.Text.Json.JsonSerializerOptions options)
    {
        writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
    }
}
